[{"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/index.js":"1","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/reportWebVitals.js":"2","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/WorkflowManager.js":"3","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/ApplicationViews.js":"4","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/nav/NavBar.js":"5","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/auth/Login.js":"6","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/auth/Register.js":"7","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/WorkflowProvider.js":"8","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/UserWorkflowList.js":"9","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/UserWorkflowListItem.js":"10","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/AllWorkflowList.js":"11","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/WorkflowForm.js":"12","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/states/StateProvider.js":"13","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/statuses/StatusProvider.js":"14","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/companies/CompanyProvider.js":"15","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/users/UserProvider.js":"16","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/CancelEditButton.js":"17"},{"size":404,"mtime":1608069784586,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608054410569,"results":"20","hashOfConfig":"19"},{"size":1111,"mtime":1609265045233,"results":"21","hashOfConfig":"19"},{"size":2444,"mtime":1609943849009,"results":"22","hashOfConfig":"19"},{"size":1392,"mtime":1609264975166,"results":"23","hashOfConfig":"19"},{"size":2724,"mtime":1608067807838,"results":"24","hashOfConfig":"19"},{"size":4541,"mtime":1608067731235,"results":"25","hashOfConfig":"19"},{"size":2318,"mtime":1609881995357,"results":"26","hashOfConfig":"19"},{"size":3026,"mtime":1609772720045,"results":"27","hashOfConfig":"19"},{"size":1261,"mtime":1608241762158,"results":"28","hashOfConfig":"19"},{"size":3069,"mtime":1609867016213,"results":"29","hashOfConfig":"19"},{"size":7804,"mtime":1609947130190,"results":"30","hashOfConfig":"19"},{"size":654,"mtime":1609870084109,"results":"31","hashOfConfig":"19"},{"size":672,"mtime":1609870084934,"results":"32","hashOfConfig":"19"},{"size":683,"mtime":1609870081605,"results":"33","hashOfConfig":"19"},{"size":643,"mtime":1609870083262,"results":"34","hashOfConfig":"19"},{"size":347,"mtime":1609883282190,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"cv2pbn",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/index.js",[],["77","78"],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/reportWebVitals.js",[],["79","80"],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/WorkflowManager.js",[],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/ApplicationViews.js",[],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/nav/NavBar.js",[],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/auth/Login.js",[],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/auth/Register.js",[],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/WorkflowProvider.js",[],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/UserWorkflowList.js",["81","82"],"import React, { useEffect, useContext, useState } from \"react\"\nimport { Table } from \"react-bootstrap\"\nimport { WorkflowContext } from \"./WorkflowProvider.js\"\n\n\nexport const UserWorkflowList = props => {\n  const { userId } = props\n\n  const { workflows, getWorkflowsByUserId } = useContext(WorkflowContext)\n\n  // state variable keeping track of if call to API has resolved yet\n  const [ isLoaded, setIsLoaded ] = useState(false)\n\n  const isCurrentUser = userId === parseInt(localStorage.getItem('workflow_user_id'))\n  workflows.sort((a,b) => b.id - a.id)\n\n  useEffect(() => {\n    \n    getWorkflowsByUserId(userId)\n    .then(() => setIsLoaded(true))\n    \n  }, [])\n  \n\n  /**\n   * Get the proper header for the list\n   */\n  const getHeader = () => {\n    // List of user's own workflows - header should be \"My Workflows\"\n    if(isCurrentUser) {\n      return \"My Tax Returns\"\n    }\n\n    // Not the user's own workflows and the API call has returned with workflows - \n    // grab the username from the first workflow\n  \n\n    // The API call returned with no workflows, tell the user there are no workflows for this user\n    else if(!workflows.length && isLoaded) {\n      return \"There are no tax returns this user :/\"\n    }\n  }\n \n  return (\n    <div className=\"workflowList\">\n      \n\n      <Table bordered hover responsive=\"md\">\n        <thead>\n          <tr>\n            \n            <th>State</th>\n            <th>Company</th>\n            <th>Preparer</th>\n            <th>Reviewer</th>\n            <th>Processor</th>\n            <th>Due Date</th>\n            <th>Completion Date</th>\n            <th>Status</th>\n           \n            \n          </tr>\n        </thead>\n        <tbody>\n          \n\n            \n           { workflows.map(workflow => {\n              const { id, due_date, completion_date, preparer, reviewer, processor, status, state, company } = workflow\n              const readableDueDate = (new Date(due_date + 'T00:00:00')).toLocaleDateString('en-US')\n              const readableCompletionDate = () => {\n                  if (completion_date === null) {\n                      return \"N/A\"\n                  }\n                  else{\n                      return (new Date(completion_date + 'T00:00:00')).toLocaleDateString('en-US')\n                  }\n              } \n\n              \n\n              return (\n                <tr key={id} className=\"position-relative\">\n                 \n                  <td>{state.name}</td>\n                  <td>{company.name}</td>\n                  <td>{preparer.first_name} {preparer.last_name}</td>\n                  <td>{reviewer.first_name} {reviewer.last_name}</td>\n                  <td>{processor.first_name} {processor.last_name}</td>\n                  <td>{readableDueDate}</td>\n                  <td>{readableCompletionDate()}</td>\n                  <td>{status.name}</td>\n                 \n                  \n                  \n                </tr>\n                \n              )\n            })\n          }\n        </tbody>\n      </Table> \n    </div>\n  )\n}","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/UserWorkflowListItem.js",["83","84","85","86"],"import React, { useContext } from \"react\"\nimport { WorkflowContext } from \"./WorkflowProvider\"\nimport { Row, Col } from \"react-bootstrap\"\n\nexport const UserWorkflowListItem = props => {\n  const { workflow } = props\n  const { id, due_date, completion_date, preparer, reviewer, processor, status, state, company } = workflow\n  const readableDate = (new Date(due_date + 'T00:00:00')).toLocaleDateString('en-Us')\n  \n\n  \n\n  return (\n    <div>\n      <Row className=\"align-items-center\">\n        <Col sm=\"8\">\n          <h2 className=\"font-weight-bold\">State:{state.name}</h2>\n        </Col>\n        <Col sm=\"8\">\n          <h2 className=\"font-weight-bold\">Company: {company.name}</h2>\n        </Col>\n        <Col sm=\"4\">\n          <p className=\"text-right\">Due Date: {due_date}</p>\n        </Col><Col sm=\"4\">\n          <p className=\"text-right\"> Date Completed: {completion_date}</p>\n        </Col>\n        <Col sm=\"3\">\n          <p>Preparer: {preparer.username}</p>\n        </Col>\n        <Col sm=\"3\">\n          <p>Reviewer: {reviewer.username}</p>\n        </Col>\n        <Col sm=\"3\">\n          <p>Processor: {processor.username}</p>\n        </Col>\n        <Col sm=\"3\">\n          <p>Status: {status.name}</p>\n        </Col>\n      </Row>\n\n      \n      \n    </div>\n  )\n}",["87","88"],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/AllWorkflowList.js",["89","90","91"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { Row, Button, Table } from \"react-bootstrap\"\nimport { MdAdd } from \"react-icons/md\"\nimport { WorkflowContext } from \"./WorkflowProvider\"\n\n\n\nexport const WorkflowList = props => {\n    const { workflows, getWorkflows } = useContext(WorkflowContext)\n\n    \n\n    // Initialization effect hook -> Go get workflow data\n    useEffect(() => {\n        getWorkflows()\n        \n      }, []);\n\n    const history = useHistory()\n    const isAdmin = localStorage.getItem('is_admin')\n    console.log(workflows)\n    \n    return (\n       \n            <div className=\"workflowList\">\n        {\n            isAdmin &&\n          <Row className=\"align-items-center justify-content-end my-4\">\n            <Button variant=\"light\" \n              className=\"d-flex align-items-center\"\n              onClick={() => history.push('/workflows/create')}>\n              Add Workflow <MdAdd style={{ fontSize: '48px' }} />\n            </Button>\n          </Row>\n          \n        }\n        \n    \n    \n\n          <Table bordered hover responsive=\"md\">\n            <thead>\n              <tr>\n                \n                <th>State</th>\n                <th>Company</th>\n                <th>Preparer</th>\n                <th>Reviewer</th>\n                <th>Processor</th>\n                <th>Due Date</th>\n                <th>Completion Date</th>\n                <th>Status</th>\n               \n                \n              </tr>\n            </thead>\n            <tbody>\n              \n\n                \n               { workflows.map(workflow => {\n                  const { id, due_date, completion_date, preparer, reviewer, processor, status, state, company } = workflow\n                  const readableDueDate = (new Date(due_date + 'T00:00:00')).toLocaleDateString('en-US')\n                  const readableCompletionDate = () => {\n                      if (completion_date === null) {\n                          return \"N/A\"\n                      }\n                      else{\n                          return (new Date(completion_date + 'T00:00:00')).toLocaleDateString('en-US')\n                      }\n                  } \n\n                  \n\n                  return (\n                    <tr key={id} className=\"position-relative\">\n                     \n                      <td>{state.name}</td>\n                      <td>{company.name}</td>\n                      <td>{preparer.first_name} {preparer.last_name}</td>\n                      <td>{reviewer.first_name} {reviewer.last_name}</td>\n                      <td>{processor.first_name} {processor.last_name}</td>\n                      <td>{readableDueDate}</td>\n                      <td>{readableCompletionDate()}</td>\n                      <td>{status.name}</td>\n                     \n                      \n                      \n                    </tr>\n                    \n                  )\n                })\n              }\n            </tbody>\n          </Table> \n        </div>\n        \n      )\n    }","/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/WorkflowForm.js",["92"],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/states/StateProvider.js",[],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/statuses/StatusProvider.js",[],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/companies/CompanyProvider.js",[],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/users/UserProvider.js",[],"/Users/bryanford/workspace/back-end-capstone/capstone-client/capstone-client/src/components/workflows/CancelEditButton.js",["93"],"import React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { Button } from \"react-bootstrap\"\n\nexport default (props) => {\n    const history = useHistory()\n   \n    return (\n        <Button onClick={evt => {\n            evt.preventDefault()\n            history.goBack()   \n        }}>\n            Cancel\n        </Button>\n    )\n}",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":22,"column":6,"nodeType":"102","endLine":22,"endColumn":8,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":28,"column":9,"nodeType":"106","messageId":"107","endLine":28,"endColumn":18},{"ruleId":"104","severity":1,"message":"108","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":27},{"ruleId":"104","severity":1,"message":"109","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":25},{"ruleId":"104","severity":1,"message":"110","line":7,"column":11,"nodeType":"106","messageId":"107","endLine":7,"endColumn":13},{"ruleId":"104","severity":1,"message":"111","line":8,"column":9,"nodeType":"106","messageId":"107","endLine":8,"endColumn":21},{"ruleId":"94","replacedBy":"112"},{"ruleId":"96","replacedBy":"113"},{"ruleId":"104","severity":1,"message":"114","line":1,"column":40,"nodeType":"106","messageId":"107","endLine":1,"endColumn":48},{"ruleId":"104","severity":1,"message":"115","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":14},{"ruleId":"100","severity":1,"message":"116","line":18,"column":10,"nodeType":"102","endLine":18,"endColumn":12,"suggestions":"117"},{"ruleId":"100","severity":1,"message":"118","line":55,"column":7,"nodeType":"102","endLine":55,"endColumn":9,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":5,"column":1,"nodeType":"122","endLine":16,"endColumn":2},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getWorkflowsByUserId' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["125"],"no-unused-vars","'getHeader' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'WorkflowContext' is defined but never used.","'id' is assigned a value but never used.","'readableDate' is assigned a value but never used.",["123"],["124"],"'useState' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getWorkflows'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has missing dependencies: 'getCompanies', 'getStates', 'getStatuses', 'getUsers', 'getWorkflowById', 'isEditMode', and 'props.match.params.workflowId'. Either include them or remove the dependency array.",["127"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [getWorkflowsByUserId, userId]",{"range":"134","text":"135"},"Update the dependencies array to be: [getWorkflows]",{"range":"136","text":"137"},"Update the dependencies array to be: [getCompanies, getStates, getStatuses, getUsers, getWorkflowById, isEditMode, props.match.params.workflowId]",{"range":"138","text":"139"},[658,660],"[getWorkflowsByUserId, userId]",[498,500],"[getWorkflows]",[1859,1861],"[getCompanies, getStates, getStatuses, getUsers, getWorkflowById, isEditMode, props.match.params.workflowId]"]